<?php

// This is a autogenerated file:Serie

class Serie {
    private ?string $letra; // json:letra Optional
    private ?string $tipoDocumento; // json:tipoDocumento Optional
    private ?int $folio; // json:folio Optional

    /**
     * @param string|null $letra
     * @param string|null $tipoDocumento
     * @param int|null $folio
     */
    public function __construct(?string $letra, ?string $tipoDocumento, ?int $folio) {
        $this->letra = $letra;
        $this->tipoDocumento = $tipoDocumento;
        $this->folio = $folio;
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromLetra(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toLetra(): ?string {
        if (Serie::validateLetra($this->letra))  {
            if (!is_null($this->letra)) {
                return $this->letra; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Serie::letra');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateLetra(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Serie::letra");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getLetra(): ?string {
        return $this->letra;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setLetra(?string $value) {
        if (Serie::validateLetra($value))  {
            $this->letra = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleLetra(): ?string {
        return 'Serie::letra::31'; /*31:letra*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromTipoDocumento(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toTipoDocumento(): ?string {
        if (Serie::validateTipoDocumento($this->tipoDocumento))  {
            if (!is_null($this->tipoDocumento)) {
                return $this->tipoDocumento; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Serie::tipoDocumento');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateTipoDocumento(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Serie::tipoDocumento");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getTipoDocumento(): ?string {
        return $this->tipoDocumento;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setTipoDocumento(?string $value) {
        if (Serie::validateTipoDocumento($value))  {
            $this->tipoDocumento = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleTipoDocumento(): ?string {
        return 'Serie::tipoDocumento::32'; /*32:tipoDocumento*/
    }

    /**
     * @param ?int $value
     * @throws Exception
     * @return ?int
     */
    public static function fromFolio(?int $value): ?int {
        if (!is_null($value)) {
            return $value; /*int*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?int
     */
    public function toFolio(): ?int {
        if (Serie::validateFolio($this->folio))  {
            if (!is_null($this->folio)) {
                return $this->folio; /*int*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Serie::folio');
    }

    /**
     * @param int|null
     * @return bool
     * @throws Exception
     */
    public static function validateFolio(?int $value): bool {
        if (!is_null($value)) {
            if (!is_integer($value)) {
                throw new Exception("Attribute Error:Serie::folio");
            }
        }
        return true;
    }

    /**
     * @return ?int
     */
    public function getFolio(): ?int {
        return $this->folio;
    }

    /**
     * @param int|null
     * @throws Exception
     */
    public function setFolio(?int $value) {
        if (Serie::validateFolio($value))  {
            $this->folio = $value;
        }
    }

    /**
     * @return ?int
     */
    public static function sampleFolio(): ?int {
        return 33; /*33:folio*/
    }

    /**
     * @throws Exception
     * @return bool
     */
    public function validate(): bool {
        return Serie::validateLetra($this->letra)
        || Serie::validateTipoDocumento($this->tipoDocumento)
        || Serie::validateFolio($this->folio);
    }

    /**
     * @return stdClass
     * @throws Exception
     */
    public function to(): stdClass  {
        $out = new stdClass();
        $out->{'letra'} = $this->toLetra();
        $out->{'tipoDocumento'} = $this->toTipoDocumento();
        $out->{'folio'} = $this->toFolio();
        return $out;
    }

    /**
     * @param stdClass $obj
     * @return Serie
     * @throws Exception
     */
    public function from(stdClass $obj): Serie {
        Serie::validateLetra($this->letra, true);
        Serie::validateTipoDocumento($this->tipoDocumento, true);
        Serie::validateFolio($this->folio, true);
        return new Serie(
         Serie::fromLetra($obj->{'letra'})
        ,Serie::fromTipoDocumento($obj->{'tipoDocumento'})
        ,Serie::fromFolio($obj->{'folio'})
        );
    }

    /**
     * @return Serie
     */
    public static function sample(): Serie {
        return new Serie(
         Serie::sampleLetra()
        ,Serie::sampleTipoDocumento()
        ,Serie::sampleFolio()
        );
    }
}
?>
