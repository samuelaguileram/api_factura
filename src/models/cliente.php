<?php

// This is a autogenerated file:Cliente

class Cliente {
    private ?string $rfc; // json:rfc Optional
    private ?string $razons; // json:razons Optional
    private ?int $codpos; // json:codpos Optional
    private ?string $email; // json:email Optional
    private ?string $usocfdi; // json:usocfdi Optional
    private ?string $regimen; // json:regimen Optional
    private ?string $calle; // json:calle Optional
    private ?string $numeroExterior; // json:numero_exterior Optional
    private ?string $numeroInterior; // json:numero_interior Optional
    private ?string $colonia; // json:colonia Optional
    private ?string $ciudad; // json:ciudad Optional
    private ?string $delegacion; // json:delegacion Optional
    private ?string $localidad; // json:localidad Optional
    private ?string $estado; // json:estado Optional
    private ?string $pais; // json:pais Optional
    private ?string $numregidtrib; // json:numregidtrib Optional
    private ?string $nombre; // json:nombre Optional
    private ?string $apellidos; // json:apellidos Optional
    private ?string $telefono; // json:telefono Optional
    private ?string $email2; // json:email2 Optional
    private ?string $email3; // json:email3 Optional

    /**
     * @param string|null $rfc
     * @param string|null $razons
     * @param int|null $codpos
     * @param string|null $email
     * @param string|null $usocfdi
     * @param string|null $regimen
     * @param string|null $calle
     * @param string|null $numeroExterior
     * @param string|null $numeroInterior
     * @param string|null $colonia
     * @param string|null $ciudad
     * @param string|null $delegacion
     * @param string|null $localidad
     * @param string|null $estado
     * @param string|null $pais
     * @param string|null $numregidtrib
     * @param string|null $nombre
     * @param string|null $apellidos
     * @param string|null $telefono
     * @param string|null $email2
     * @param string|null $email3
     */
    public function __construct(?string $rfc, ?string $razons, ?int $codpos, ?string $email, ?string $usocfdi, ?string $regimen, ?string $calle, ?string $numeroExterior, ?string $numeroInterior, ?string $colonia, ?string $ciudad, ?string $delegacion, ?string $localidad, ?string $estado, ?string $pais, ?string $numregidtrib, ?string $nombre, ?string $apellidos, ?string $telefono, ?string $email2, ?string $email3) {
        $this->rfc = $rfc;
        $this->razons = $razons;
        $this->codpos = $codpos;
        $this->email = $email;
        $this->usocfdi = $usocfdi;
        $this->regimen = $regimen;
        $this->calle = $calle;
        $this->numeroExterior = $numeroExterior;
        $this->numeroInterior = $numeroInterior;
        $this->colonia = $colonia;
        $this->ciudad = $ciudad;
        $this->delegacion = $delegacion;
        $this->localidad = $localidad;
        $this->estado = $estado;
        $this->pais = $pais;
        $this->numregidtrib = $numregidtrib;
        $this->nombre = $nombre;
        $this->apellidos = $apellidos;
        $this->telefono = $telefono;
        $this->email2 = $email2;
        $this->email3 = $email3;
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRFC(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRFC(): ?string {
        if (Cliente::validateRFC($this->rfc))  {
            if (!is_null($this->rfc)) {
                return $this->rfc; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::rfc');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRFC(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::rfc");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRFC(): ?string {
        return $this->rfc;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRFC(?string $value) {
        if (Cliente::validateRFC($value))  {
            $this->rfc = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRFC(): ?string {
        return 'Cliente::rfc::31'; /*31:rfc*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRazons(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRazons(): ?string {
        if (Cliente::validateRazons($this->razons))  {
            if (!is_null($this->razons)) {
                return $this->razons; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::razons');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRazons(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::razons");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRazons(): ?string {
        return $this->razons;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRazons(?string $value) {
        if (Cliente::validateRazons($value))  {
            $this->razons = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRazons(): ?string {
        return 'Cliente::razons::32'; /*32:razons*/
    }

    /**
     * @param ?int $value
     * @throws Exception
     * @return ?int
     */
    public static function fromCodpos(?int $value): ?int {
        if (!is_null($value)) {
            return $value; /*int*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?int
     */
    public function toCodpos(): ?int {
        if (Cliente::validateCodpos($this->codpos))  {
            if (!is_null($this->codpos)) {
                return $this->codpos; /*int*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::codpos');
    }

    /**
     * @param int|null
     * @return bool
     * @throws Exception
     */
    public static function validateCodpos(?int $value): bool {
        if (!is_null($value)) {
            if (!is_integer($value)) {
                throw new Exception("Attribute Error:Cliente::codpos");
            }
        }
        return true;
    }

    /**
     * @return ?int
     */
    public function getCodpos(): ?int {
        return $this->codpos;
    }

    /**
     * @param int|null
     * @throws Exception
     */
    public function setCodpos(?int $value) {
        if (Cliente::validateCodpos($value))  {
            $this->codpos = $value;
        }
    }

    /**
     * @return ?int
     */
    public static function sampleCodpos(): ?int {
        return 33; /*33:codpos*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEmail(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEmail(): ?string {
        if (Cliente::validateEmail($this->email))  {
            if (!is_null($this->email)) {
                return $this->email; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::email');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEmail(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::email");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEmail(): ?string {
        return $this->email;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEmail(?string $value) {
        if (Cliente::validateEmail($value))  {
            $this->email = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEmail(): ?string {
        return 'Cliente::email::34'; /*34:email*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromUsocfdi(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toUsocfdi(): ?string {
        if (Cliente::validateUsocfdi($this->usocfdi))  {
            if (!is_null($this->usocfdi)) {
                return $this->usocfdi; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::usocfdi');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateUsocfdi(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::usocfdi");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getUsocfdi(): ?string {
        return $this->usocfdi;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setUsocfdi(?string $value) {
        if (Cliente::validateUsocfdi($value))  {
            $this->usocfdi = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleUsocfdi(): ?string {
        return 'Cliente::usocfdi::35'; /*35:usocfdi*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRegimen(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRegimen(): ?string {
        if (Cliente::validateRegimen($this->regimen))  {
            if (!is_null($this->regimen)) {
                return $this->regimen; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::regimen');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRegimen(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::regimen");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRegimen(): ?string {
        return $this->regimen;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRegimen(?string $value) {
        if (Cliente::validateRegimen($value))  {
            $this->regimen = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRegimen(): ?string {
        return 'Cliente::regimen::36'; /*36:regimen*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCalle(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCalle(): ?string {
        if (Cliente::validateCalle($this->calle))  {
            if (!is_null($this->calle)) {
                return $this->calle; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::calle');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCalle(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::calle");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCalle(): ?string {
        return $this->calle;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCalle(?string $value) {
        if (Cliente::validateCalle($value))  {
            $this->calle = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCalle(): ?string {
        return 'Cliente::calle::37'; /*37:calle*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNumeroExterior(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNumeroExterior(): ?string {
        if (Cliente::validateNumeroExterior($this->numeroExterior))  {
            if (!is_null($this->numeroExterior)) {
                return $this->numeroExterior; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::numeroExterior');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNumeroExterior(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::numeroExterior");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNumeroExterior(): ?string {
        return $this->numeroExterior;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNumeroExterior(?string $value) {
        if (Cliente::validateNumeroExterior($value))  {
            $this->numeroExterior = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNumeroExterior(): ?string {
        return 'Cliente::numeroExterior::38'; /*38:numeroExterior*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNumeroInterior(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNumeroInterior(): ?string {
        if (Cliente::validateNumeroInterior($this->numeroInterior))  {
            if (!is_null($this->numeroInterior)) {
                return $this->numeroInterior; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::numeroInterior');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNumeroInterior(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::numeroInterior");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNumeroInterior(): ?string {
        return $this->numeroInterior;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNumeroInterior(?string $value) {
        if (Cliente::validateNumeroInterior($value))  {
            $this->numeroInterior = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNumeroInterior(): ?string {
        return 'Cliente::numeroInterior::39'; /*39:numeroInterior*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromColonia(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toColonia(): ?string {
        if (Cliente::validateColonia($this->colonia))  {
            if (!is_null($this->colonia)) {
                return $this->colonia; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::colonia');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateColonia(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::colonia");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getColonia(): ?string {
        return $this->colonia;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setColonia(?string $value) {
        if (Cliente::validateColonia($value))  {
            $this->colonia = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleColonia(): ?string {
        return 'Cliente::colonia::40'; /*40:colonia*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCiudad(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCiudad(): ?string {
        if (Cliente::validateCiudad($this->ciudad))  {
            if (!is_null($this->ciudad)) {
                return $this->ciudad; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::ciudad');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCiudad(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::ciudad");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCiudad(): ?string {
        return $this->ciudad;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCiudad(?string $value) {
        if (Cliente::validateCiudad($value))  {
            $this->ciudad = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCiudad(): ?string {
        return 'Cliente::ciudad::41'; /*41:ciudad*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromDelegacion(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toDelegacion(): ?string {
        if (Cliente::validateDelegacion($this->delegacion))  {
            if (!is_null($this->delegacion)) {
                return $this->delegacion; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::delegacion');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateDelegacion(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::delegacion");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getDelegacion(): ?string {
        return $this->delegacion;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setDelegacion(?string $value) {
        if (Cliente::validateDelegacion($value))  {
            $this->delegacion = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleDelegacion(): ?string {
        return 'Cliente::delegacion::42'; /*42:delegacion*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromLocalidad(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toLocalidad(): ?string {
        if (Cliente::validateLocalidad($this->localidad))  {
            if (!is_null($this->localidad)) {
                return $this->localidad; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::localidad');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateLocalidad(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::localidad");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getLocalidad(): ?string {
        return $this->localidad;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setLocalidad(?string $value) {
        if (Cliente::validateLocalidad($value))  {
            $this->localidad = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleLocalidad(): ?string {
        return 'Cliente::localidad::43'; /*43:localidad*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEstado(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEstado(): ?string {
        if (Cliente::validateEstado($this->estado))  {
            if (!is_null($this->estado)) {
                return $this->estado; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::estado');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEstado(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::estado");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEstado(): ?string {
        return $this->estado;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEstado(?string $value) {
        if (Cliente::validateEstado($value))  {
            $this->estado = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEstado(): ?string {
        return 'Cliente::estado::44'; /*44:estado*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromPais(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toPais(): ?string {
        if (Cliente::validatePais($this->pais))  {
            if (!is_null($this->pais)) {
                return $this->pais; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::pais');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validatePais(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::pais");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getPais(): ?string {
        return $this->pais;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setPais(?string $value) {
        if (Cliente::validatePais($value))  {
            $this->pais = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function samplePais(): ?string {
        return 'Cliente::pais::45'; /*45:pais*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNumregidtrib(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNumregidtrib(): ?string {
        if (Cliente::validateNumregidtrib($this->numregidtrib))  {
            if (!is_null($this->numregidtrib)) {
                return $this->numregidtrib; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::numregidtrib');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNumregidtrib(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::numregidtrib");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNumregidtrib(): ?string {
        return $this->numregidtrib;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNumregidtrib(?string $value) {
        if (Cliente::validateNumregidtrib($value))  {
            $this->numregidtrib = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNumregidtrib(): ?string {
        return 'Cliente::numregidtrib::46'; /*46:numregidtrib*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNombre(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNombre(): ?string {
        if (Cliente::validateNombre($this->nombre))  {
            if (!is_null($this->nombre)) {
                return $this->nombre; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::nombre');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNombre(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::nombre");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNombre(): ?string {
        return $this->nombre;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNombre(?string $value) {
        if (Cliente::validateNombre($value))  {
            $this->nombre = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNombre(): ?string {
        return 'Cliente::nombre::47'; /*47:nombre*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromApellidos(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toApellidos(): ?string {
        if (Cliente::validateApellidos($this->apellidos))  {
            if (!is_null($this->apellidos)) {
                return $this->apellidos; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::apellidos');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateApellidos(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::apellidos");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getApellidos(): ?string {
        return $this->apellidos;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setApellidos(?string $value) {
        if (Cliente::validateApellidos($value))  {
            $this->apellidos = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleApellidos(): ?string {
        return 'Cliente::apellidos::48'; /*48:apellidos*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromTelefono(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toTelefono(): ?string {
        if (Cliente::validateTelefono($this->telefono))  {
            if (!is_null($this->telefono)) {
                return $this->telefono; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::telefono');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateTelefono(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::telefono");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getTelefono(): ?string {
        return $this->telefono;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setTelefono(?string $value) {
        if (Cliente::validateTelefono($value))  {
            $this->telefono = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleTelefono(): ?string {
        return 'Cliente::telefono::49'; /*49:telefono*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEmail2(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEmail2(): ?string {
        if (Cliente::validateEmail2($this->email2))  {
            if (!is_null($this->email2)) {
                return $this->email2; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::email2');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEmail2(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::email2");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEmail2(): ?string {
        return $this->email2;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEmail2(?string $value) {
        if (Cliente::validateEmail2($value))  {
            $this->email2 = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEmail2(): ?string {
        return 'Cliente::email2::50'; /*50:email2*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEmail3(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEmail3(): ?string {
        if (Cliente::validateEmail3($this->email3))  {
            if (!is_null($this->email3)) {
                return $this->email3; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Cliente::email3');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEmail3(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Cliente::email3");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEmail3(): ?string {
        return $this->email3;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEmail3(?string $value) {
        if (Cliente::validateEmail3($value))  {
            $this->email3 = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEmail3(): ?string {
        return 'Cliente::email3::51'; /*51:email3*/
    }

    /**
     * @throws Exception
     * @return bool
     */
    public function validate(): bool {
        return Cliente::validateRFC($this->rfc)
        || Cliente::validateRazons($this->razons)
        || Cliente::validateCodpos($this->codpos)
        || Cliente::validateEmail($this->email)
        || Cliente::validateUsocfdi($this->usocfdi)
        || Cliente::validateRegimen($this->regimen)
        || Cliente::validateCalle($this->calle)
        || Cliente::validateNumeroExterior($this->numeroExterior)
        || Cliente::validateNumeroInterior($this->numeroInterior)
        || Cliente::validateColonia($this->colonia)
        || Cliente::validateCiudad($this->ciudad)
        || Cliente::validateDelegacion($this->delegacion)
        || Cliente::validateLocalidad($this->localidad)
        || Cliente::validateEstado($this->estado)
        || Cliente::validatePais($this->pais)
        || Cliente::validateNumregidtrib($this->numregidtrib)
        || Cliente::validateNombre($this->nombre)
        || Cliente::validateApellidos($this->apellidos)
        || Cliente::validateTelefono($this->telefono)
        || Cliente::validateEmail2($this->email2)
        || Cliente::validateEmail3($this->email3);
    }

    /**
     * @return stdClass
     * @throws Exception
     */
    public function to(): stdClass  {
        $out = new stdClass();
        $out->{'rfc'} = $this->toRFC();
        $out->{'razons'} = $this->toRazons();
        $out->{'codpos'} = $this->toCodpos();
        $out->{'email'} = $this->toEmail();
        $out->{'usocfdi'} = $this->toUsocfdi();
        $out->{'regimen'} = $this->toRegimen();
        $out->{'calle'} = $this->toCalle();
        $out->{'numero_exterior'} = $this->toNumeroExterior();
        $out->{'numero_interior'} = $this->toNumeroInterior();
        $out->{'colonia'} = $this->toColonia();
        $out->{'ciudad'} = $this->toCiudad();
        $out->{'delegacion'} = $this->toDelegacion();
        $out->{'localidad'} = $this->toLocalidad();
        $out->{'estado'} = $this->toEstado();
        $out->{'pais'} = $this->toPais();
        $out->{'numregidtrib'} = $this->toNumregidtrib();
        $out->{'nombre'} = $this->toNombre();
        $out->{'apellidos'} = $this->toApellidos();
        $out->{'telefono'} = $this->toTelefono();
        $out->{'email2'} = $this->toEmail2();
        $out->{'email3'} = $this->toEmail3();
        return $out;
    }

    /**
     * @param stdClass $obj
     * @return Cliente
     * @throws Exception
     */
    public function from(stdClass $obj): Cliente {
        Cliente::validateRFC($this->rfc, true);
        Cliente::validateRazons($this->razons, true);
        Cliente::validateCodpos($this->codpos, true);
        Cliente::validateEmail($this->email, true);
        Cliente::validateUsocfdi($this->usocfdi, true);
        Cliente::validateRegimen($this->regimen, true);
        Cliente::validateCalle($this->calle, true);
        Cliente::validateNumeroExterior($this->numeroExterior, true);
        Cliente::validateNumeroInterior($this->numeroInterior, true);
        Cliente::validateColonia($this->colonia, true);
        Cliente::validateCiudad($this->ciudad, true);
        Cliente::validateDelegacion($this->delegacion, true);
        Cliente::validateLocalidad($this->localidad, true);
        Cliente::validateEstado($this->estado, true);
        Cliente::validatePais($this->pais, true);
        Cliente::validateNumregidtrib($this->numregidtrib, true);
        Cliente::validateNombre($this->nombre, true);
        Cliente::validateApellidos($this->apellidos, true);
        Cliente::validateTelefono($this->telefono, true);
        Cliente::validateEmail2($this->email2, true);
        Cliente::validateEmail3($this->email3, true);
        return new Cliente(
         Cliente::fromRFC($obj->{'rfc'})
        ,Cliente::fromRazons($obj->{'razons'})
        ,Cliente::fromCodpos($obj->{'codpos'})
        ,Cliente::fromEmail($obj->{'email'})
        ,Cliente::fromUsocfdi($obj->{'usocfdi'})
        ,Cliente::fromRegimen($obj->{'regimen'})
        ,Cliente::fromCalle($obj->{'calle'})
        ,Cliente::fromNumeroExterior($obj->{'numero_exterior'})
        ,Cliente::fromNumeroInterior($obj->{'numero_interior'})
        ,Cliente::fromColonia($obj->{'colonia'})
        ,Cliente::fromCiudad($obj->{'ciudad'})
        ,Cliente::fromDelegacion($obj->{'delegacion'})
        ,Cliente::fromLocalidad($obj->{'localidad'})
        ,Cliente::fromEstado($obj->{'estado'})
        ,Cliente::fromPais($obj->{'pais'})
        ,Cliente::fromNumregidtrib($obj->{'numregidtrib'})
        ,Cliente::fromNombre($obj->{'nombre'})
        ,Cliente::fromApellidos($obj->{'apellidos'})
        ,Cliente::fromTelefono($obj->{'telefono'})
        ,Cliente::fromEmail2($obj->{'email2'})
        ,Cliente::fromEmail3($obj->{'email3'})
        );
    }

    /**
     * @return Cliente
     */
    public static function sample(): Cliente {
        return new Cliente(
         Cliente::sampleRFC()
        ,Cliente::sampleRazons()
        ,Cliente::sampleCodpos()
        ,Cliente::sampleEmail()
        ,Cliente::sampleUsocfdi()
        ,Cliente::sampleRegimen()
        ,Cliente::sampleCalle()
        ,Cliente::sampleNumeroExterior()
        ,Cliente::sampleNumeroInterior()
        ,Cliente::sampleColonia()
        ,Cliente::sampleCiudad()
        ,Cliente::sampleDelegacion()
        ,Cliente::sampleLocalidad()
        ,Cliente::sampleEstado()
        ,Cliente::samplePais()
        ,Cliente::sampleNumregidtrib()
        ,Cliente::sampleNombre()
        ,Cliente::sampleApellidos()
        ,Cliente::sampleTelefono()
        ,Cliente::sampleEmail2()
        ,Cliente::sampleEmail3()
        );
    }
}
?>
