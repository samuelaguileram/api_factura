<?php

// This is a autogenerated file:Empleado

class Empleado {
    private ?string $grupo; // json:grupo Optional
    private ?string $noEmpleado; // json:no_empleado Optional
    private ?string $nombre; // json:nombre Optional
    private ?string $paterno; // json:paterno Optional
    private ?string $materno; // json:materno Optional
    private ?string $metodoPago; // json:metodo_pago Optional
    private ?string $periodo; // json:periodo Optional
    private ?string $regimen; // json:regimen Optional
    private ?string $puesto; // json:puesto Optional
    private ?string $departamento; // json:departamento Optional
    private ?string $curp; // json:curp Optional
    private ?string $imss; // json:imss Optional
    private ?string $rfc; // json:rfc Optional
    private ?string $calle; // json:calle Optional
    private ?string $colonia; // json:colonia Optional
    private ?string $noEXT; // json:no_ext Optional
    private ?string $cp; // json:cp Optional
    private ?string $municipio; // json:municipio Optional
    private ?string $estado; // json:estado Optional
    private ?string $tipoContrato; // json:tipo_contrato Optional
    private ?string $asimilados; // json:asimilados Optional
    private ?string $sindicalizado; // json:sindicalizado Optional
    private ?string $entidadEmite; // json:entidad_emite Optional
    private ?string $banco; // json:banco Optional
    private ?string $clabe; // json:clabe Optional
    private ?string $noInt; // json:no_int Optional
    private ?string $localidad; // json:localidad Optional
    private ?string $email; // json:email Optional
    private ?string $tipoJornada; // json:tipo_jornada Optional
    private ?string $patronal; // json:patronal Optional
    private ?string $cuotaDiaria; // json:cuota_diaria Optional
    private ?string $salario; // json:salario Optional
    private ?string $riesgo; // json:riesgo Optional
    private ?string $inicio; // json:inicio Optional

    /**
     * @param string|null $grupo
     * @param string|null $noEmpleado
     * @param string|null $nombre
     * @param string|null $paterno
     * @param string|null $materno
     * @param string|null $metodoPago
     * @param string|null $periodo
     * @param string|null $regimen
     * @param string|null $puesto
     * @param string|null $departamento
     * @param string|null $curp
     * @param string|null $imss
     * @param string|null $rfc
     * @param string|null $calle
     * @param string|null $colonia
     * @param string|null $noEXT
     * @param string|null $cp
     * @param string|null $municipio
     * @param string|null $estado
     * @param string|null $tipoContrato
     * @param string|null $asimilados
     * @param string|null $sindicalizado
     * @param string|null $entidadEmite
     * @param string|null $banco
     * @param string|null $clabe
     * @param string|null $noInt
     * @param string|null $localidad
     * @param string|null $email
     * @param string|null $tipoJornada
     * @param string|null $patronal
     * @param string|null $cuotaDiaria
     * @param string|null $salario
     * @param string|null $riesgo
     * @param string|null $inicio
     */
    public function __construct(?string $grupo, ?string $noEmpleado, ?string $nombre, ?string $paterno, ?string $materno, ?string $metodoPago, ?string $periodo, ?string $regimen, ?string $puesto, ?string $departamento, ?string $curp, ?string $imss, ?string $rfc, ?string $calle, ?string $colonia, ?string $noEXT, ?string $cp, ?string $municipio, ?string $estado, ?string $tipoContrato, ?string $asimilados, ?string $sindicalizado, ?string $entidadEmite, ?string $banco, ?string $clabe, ?string $noInt, ?string $localidad, ?string $email, ?string $tipoJornada, ?string $patronal, ?string $cuotaDiaria, ?string $salario, ?string $riesgo, ?string $inicio) {
        $this->grupo = $grupo;
        $this->noEmpleado = $noEmpleado;
        $this->nombre = $nombre;
        $this->paterno = $paterno;
        $this->materno = $materno;
        $this->metodoPago = $metodoPago;
        $this->periodo = $periodo;
        $this->regimen = $regimen;
        $this->puesto = $puesto;
        $this->departamento = $departamento;
        $this->curp = $curp;
        $this->imss = $imss;
        $this->rfc = $rfc;
        $this->calle = $calle;
        $this->colonia = $colonia;
        $this->noEXT = $noEXT;
        $this->cp = $cp;
        $this->municipio = $municipio;
        $this->estado = $estado;
        $this->tipoContrato = $tipoContrato;
        $this->asimilados = $asimilados;
        $this->sindicalizado = $sindicalizado;
        $this->entidadEmite = $entidadEmite;
        $this->banco = $banco;
        $this->clabe = $clabe;
        $this->noInt = $noInt;
        $this->localidad = $localidad;
        $this->email = $email;
        $this->tipoJornada = $tipoJornada;
        $this->patronal = $patronal;
        $this->cuotaDiaria = $cuotaDiaria;
        $this->salario = $salario;
        $this->riesgo = $riesgo;
        $this->inicio = $inicio;
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromGrupo(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toGrupo(): ?string {
        if (Empleado::validateGrupo($this->grupo))  {
            if (!is_null($this->grupo)) {
                return $this->grupo; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::grupo');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateGrupo(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::grupo");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getGrupo(): ?string {
        return $this->grupo;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setGrupo(?string $value) {
        if (Empleado::validateGrupo($value))  {
            $this->grupo = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleGrupo(): ?string {
        return 'Empleado::grupo::31'; /*31:grupo*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNoEmpleado(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNoEmpleado(): ?string {
        if (Empleado::validateNoEmpleado($this->noEmpleado))  {
            if (!is_null($this->noEmpleado)) {
                return $this->noEmpleado; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::noEmpleado');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNoEmpleado(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::noEmpleado");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNoEmpleado(): ?string {
        return $this->noEmpleado;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNoEmpleado(?string $value) {
        if (Empleado::validateNoEmpleado($value))  {
            $this->noEmpleado = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNoEmpleado(): ?string {
        return 'Empleado::noEmpleado::32'; /*32:noEmpleado*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNombre(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNombre(): ?string {
        if (Empleado::validateNombre($this->nombre))  {
            if (!is_null($this->nombre)) {
                return $this->nombre; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::nombre');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNombre(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::nombre");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNombre(): ?string {
        return $this->nombre;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNombre(?string $value) {
        if (Empleado::validateNombre($value))  {
            $this->nombre = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNombre(): ?string {
        return 'Empleado::nombre::33'; /*33:nombre*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromPaterno(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toPaterno(): ?string {
        if (Empleado::validatePaterno($this->paterno))  {
            if (!is_null($this->paterno)) {
                return $this->paterno; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::paterno');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validatePaterno(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::paterno");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getPaterno(): ?string {
        return $this->paterno;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setPaterno(?string $value) {
        if (Empleado::validatePaterno($value))  {
            $this->paterno = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function samplePaterno(): ?string {
        return 'Empleado::paterno::34'; /*34:paterno*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromMaterno(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toMaterno(): ?string {
        if (Empleado::validateMaterno($this->materno))  {
            if (!is_null($this->materno)) {
                return $this->materno; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::materno');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateMaterno(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::materno");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getMaterno(): ?string {
        return $this->materno;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setMaterno(?string $value) {
        if (Empleado::validateMaterno($value))  {
            $this->materno = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleMaterno(): ?string {
        return 'Empleado::materno::35'; /*35:materno*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromMetodoPago(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toMetodoPago(): ?string {
        if (Empleado::validateMetodoPago($this->metodoPago))  {
            if (!is_null($this->metodoPago)) {
                return $this->metodoPago; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::metodoPago');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateMetodoPago(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::metodoPago");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getMetodoPago(): ?string {
        return $this->metodoPago;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setMetodoPago(?string $value) {
        if (Empleado::validateMetodoPago($value))  {
            $this->metodoPago = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleMetodoPago(): ?string {
        return 'Empleado::metodoPago::36'; /*36:metodoPago*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromPeriodo(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toPeriodo(): ?string {
        if (Empleado::validatePeriodo($this->periodo))  {
            if (!is_null($this->periodo)) {
                return $this->periodo; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::periodo');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validatePeriodo(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::periodo");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getPeriodo(): ?string {
        return $this->periodo;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setPeriodo(?string $value) {
        if (Empleado::validatePeriodo($value))  {
            $this->periodo = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function samplePeriodo(): ?string {
        return 'Empleado::periodo::37'; /*37:periodo*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRegimen(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRegimen(): ?string {
        if (Empleado::validateRegimen($this->regimen))  {
            if (!is_null($this->regimen)) {
                return $this->regimen; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::regimen');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRegimen(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::regimen");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRegimen(): ?string {
        return $this->regimen;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRegimen(?string $value) {
        if (Empleado::validateRegimen($value))  {
            $this->regimen = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRegimen(): ?string {
        return 'Empleado::regimen::38'; /*38:regimen*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromPuesto(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toPuesto(): ?string {
        if (Empleado::validatePuesto($this->puesto))  {
            if (!is_null($this->puesto)) {
                return $this->puesto; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::puesto');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validatePuesto(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::puesto");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getPuesto(): ?string {
        return $this->puesto;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setPuesto(?string $value) {
        if (Empleado::validatePuesto($value))  {
            $this->puesto = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function samplePuesto(): ?string {
        return 'Empleado::puesto::39'; /*39:puesto*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromDepartamento(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toDepartamento(): ?string {
        if (Empleado::validateDepartamento($this->departamento))  {
            if (!is_null($this->departamento)) {
                return $this->departamento; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::departamento');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateDepartamento(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::departamento");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getDepartamento(): ?string {
        return $this->departamento;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setDepartamento(?string $value) {
        if (Empleado::validateDepartamento($value))  {
            $this->departamento = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleDepartamento(): ?string {
        return 'Empleado::departamento::40'; /*40:departamento*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCurp(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCurp(): ?string {
        if (Empleado::validateCurp($this->curp))  {
            if (!is_null($this->curp)) {
                return $this->curp; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::curp');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCurp(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::curp");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCurp(): ?string {
        return $this->curp;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCurp(?string $value) {
        if (Empleado::validateCurp($value))  {
            $this->curp = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCurp(): ?string {
        return 'Empleado::curp::41'; /*41:curp*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromImss(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toImss(): ?string {
        if (Empleado::validateImss($this->imss))  {
            if (!is_null($this->imss)) {
                return $this->imss; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::imss');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateImss(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::imss");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getImss(): ?string {
        return $this->imss;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setImss(?string $value) {
        if (Empleado::validateImss($value))  {
            $this->imss = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleImss(): ?string {
        return 'Empleado::imss::42'; /*42:imss*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRFC(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRFC(): ?string {
        if (Empleado::validateRFC($this->rfc))  {
            if (!is_null($this->rfc)) {
                return $this->rfc; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::rfc');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRFC(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::rfc");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRFC(): ?string {
        return $this->rfc;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRFC(?string $value) {
        if (Empleado::validateRFC($value))  {
            $this->rfc = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRFC(): ?string {
        return 'Empleado::rfc::43'; /*43:rfc*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCalle(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCalle(): ?string {
        if (Empleado::validateCalle($this->calle))  {
            if (!is_null($this->calle)) {
                return $this->calle; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::calle');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCalle(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::calle");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCalle(): ?string {
        return $this->calle;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCalle(?string $value) {
        if (Empleado::validateCalle($value))  {
            $this->calle = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCalle(): ?string {
        return 'Empleado::calle::44'; /*44:calle*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromColonia(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toColonia(): ?string {
        if (Empleado::validateColonia($this->colonia))  {
            if (!is_null($this->colonia)) {
                return $this->colonia; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::colonia');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateColonia(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::colonia");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getColonia(): ?string {
        return $this->colonia;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setColonia(?string $value) {
        if (Empleado::validateColonia($value))  {
            $this->colonia = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleColonia(): ?string {
        return 'Empleado::colonia::45'; /*45:colonia*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNoEXT(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNoEXT(): ?string {
        if (Empleado::validateNoEXT($this->noEXT))  {
            if (!is_null($this->noEXT)) {
                return $this->noEXT; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::noEXT');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNoEXT(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::noEXT");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNoEXT(): ?string {
        return $this->noEXT;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNoEXT(?string $value) {
        if (Empleado::validateNoEXT($value))  {
            $this->noEXT = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNoEXT(): ?string {
        return 'Empleado::noEXT::46'; /*46:noEXT*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCp(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCp(): ?string {
        if (Empleado::validateCp($this->cp))  {
            if (!is_null($this->cp)) {
                return $this->cp; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::cp');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCp(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::cp");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCp(): ?string {
        return $this->cp;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCp(?string $value) {
        if (Empleado::validateCp($value))  {
            $this->cp = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCp(): ?string {
        return 'Empleado::cp::47'; /*47:cp*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromMunicipio(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toMunicipio(): ?string {
        if (Empleado::validateMunicipio($this->municipio))  {
            if (!is_null($this->municipio)) {
                return $this->municipio; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::municipio');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateMunicipio(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::municipio");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getMunicipio(): ?string {
        return $this->municipio;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setMunicipio(?string $value) {
        if (Empleado::validateMunicipio($value))  {
            $this->municipio = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleMunicipio(): ?string {
        return 'Empleado::municipio::48'; /*48:municipio*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEstado(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEstado(): ?string {
        if (Empleado::validateEstado($this->estado))  {
            if (!is_null($this->estado)) {
                return $this->estado; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::estado');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEstado(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::estado");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEstado(): ?string {
        return $this->estado;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEstado(?string $value) {
        if (Empleado::validateEstado($value))  {
            $this->estado = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEstado(): ?string {
        return 'Empleado::estado::49'; /*49:estado*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromTipoContrato(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toTipoContrato(): ?string {
        if (Empleado::validateTipoContrato($this->tipoContrato))  {
            if (!is_null($this->tipoContrato)) {
                return $this->tipoContrato; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::tipoContrato');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateTipoContrato(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::tipoContrato");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getTipoContrato(): ?string {
        return $this->tipoContrato;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setTipoContrato(?string $value) {
        if (Empleado::validateTipoContrato($value))  {
            $this->tipoContrato = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleTipoContrato(): ?string {
        return 'Empleado::tipoContrato::50'; /*50:tipoContrato*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromAsimilados(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toAsimilados(): ?string {
        if (Empleado::validateAsimilados($this->asimilados))  {
            if (!is_null($this->asimilados)) {
                return $this->asimilados; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::asimilados');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateAsimilados(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::asimilados");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getAsimilados(): ?string {
        return $this->asimilados;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setAsimilados(?string $value) {
        if (Empleado::validateAsimilados($value))  {
            $this->asimilados = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleAsimilados(): ?string {
        return 'Empleado::asimilados::51'; /*51:asimilados*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromSindicalizado(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toSindicalizado(): ?string {
        if (Empleado::validateSindicalizado($this->sindicalizado))  {
            if (!is_null($this->sindicalizado)) {
                return $this->sindicalizado; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::sindicalizado');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateSindicalizado(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::sindicalizado");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getSindicalizado(): ?string {
        return $this->sindicalizado;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setSindicalizado(?string $value) {
        if (Empleado::validateSindicalizado($value))  {
            $this->sindicalizado = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleSindicalizado(): ?string {
        return 'Empleado::sindicalizado::52'; /*52:sindicalizado*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEntidadEmite(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEntidadEmite(): ?string {
        if (Empleado::validateEntidadEmite($this->entidadEmite))  {
            if (!is_null($this->entidadEmite)) {
                return $this->entidadEmite; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::entidadEmite');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEntidadEmite(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::entidadEmite");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEntidadEmite(): ?string {
        return $this->entidadEmite;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEntidadEmite(?string $value) {
        if (Empleado::validateEntidadEmite($value))  {
            $this->entidadEmite = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEntidadEmite(): ?string {
        return 'Empleado::entidadEmite::53'; /*53:entidadEmite*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromBanco(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toBanco(): ?string {
        if (Empleado::validateBanco($this->banco))  {
            if (!is_null($this->banco)) {
                return $this->banco; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::banco');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateBanco(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::banco");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getBanco(): ?string {
        return $this->banco;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setBanco(?string $value) {
        if (Empleado::validateBanco($value))  {
            $this->banco = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleBanco(): ?string {
        return 'Empleado::banco::54'; /*54:banco*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromClabe(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toClabe(): ?string {
        if (Empleado::validateClabe($this->clabe))  {
            if (!is_null($this->clabe)) {
                return $this->clabe; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::clabe');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateClabe(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::clabe");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getClabe(): ?string {
        return $this->clabe;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setClabe(?string $value) {
        if (Empleado::validateClabe($value))  {
            $this->clabe = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleClabe(): ?string {
        return 'Empleado::clabe::55'; /*55:clabe*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromNoInt(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toNoInt(): ?string {
        if (Empleado::validateNoInt($this->noInt))  {
            if (!is_null($this->noInt)) {
                return $this->noInt; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::noInt');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateNoInt(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::noInt");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getNoInt(): ?string {
        return $this->noInt;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setNoInt(?string $value) {
        if (Empleado::validateNoInt($value))  {
            $this->noInt = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleNoInt(): ?string {
        return 'Empleado::noInt::56'; /*56:noInt*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromLocalidad(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toLocalidad(): ?string {
        if (Empleado::validateLocalidad($this->localidad))  {
            if (!is_null($this->localidad)) {
                return $this->localidad; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::localidad');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateLocalidad(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::localidad");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getLocalidad(): ?string {
        return $this->localidad;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setLocalidad(?string $value) {
        if (Empleado::validateLocalidad($value))  {
            $this->localidad = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleLocalidad(): ?string {
        return 'Empleado::localidad::57'; /*57:localidad*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromEmail(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toEmail(): ?string {
        if (Empleado::validateEmail($this->email))  {
            if (!is_null($this->email)) {
                return $this->email; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::email');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateEmail(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::email");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getEmail(): ?string {
        return $this->email;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setEmail(?string $value) {
        if (Empleado::validateEmail($value))  {
            $this->email = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleEmail(): ?string {
        return 'Empleado::email::58'; /*58:email*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromTipoJornada(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toTipoJornada(): ?string {
        if (Empleado::validateTipoJornada($this->tipoJornada))  {
            if (!is_null($this->tipoJornada)) {
                return $this->tipoJornada; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::tipoJornada');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateTipoJornada(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::tipoJornada");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getTipoJornada(): ?string {
        return $this->tipoJornada;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setTipoJornada(?string $value) {
        if (Empleado::validateTipoJornada($value))  {
            $this->tipoJornada = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleTipoJornada(): ?string {
        return 'Empleado::tipoJornada::59'; /*59:tipoJornada*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromPatronal(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toPatronal(): ?string {
        if (Empleado::validatePatronal($this->patronal))  {
            if (!is_null($this->patronal)) {
                return $this->patronal; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::patronal');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validatePatronal(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::patronal");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getPatronal(): ?string {
        return $this->patronal;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setPatronal(?string $value) {
        if (Empleado::validatePatronal($value))  {
            $this->patronal = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function samplePatronal(): ?string {
        return 'Empleado::patronal::60'; /*60:patronal*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromCuotaDiaria(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toCuotaDiaria(): ?string {
        if (Empleado::validateCuotaDiaria($this->cuotaDiaria))  {
            if (!is_null($this->cuotaDiaria)) {
                return $this->cuotaDiaria; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::cuotaDiaria');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateCuotaDiaria(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::cuotaDiaria");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getCuotaDiaria(): ?string {
        return $this->cuotaDiaria;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setCuotaDiaria(?string $value) {
        if (Empleado::validateCuotaDiaria($value))  {
            $this->cuotaDiaria = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleCuotaDiaria(): ?string {
        return 'Empleado::cuotaDiaria::61'; /*61:cuotaDiaria*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromSalario(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toSalario(): ?string {
        if (Empleado::validateSalario($this->salario))  {
            if (!is_null($this->salario)) {
                return $this->salario; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::salario');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateSalario(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::salario");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getSalario(): ?string {
        return $this->salario;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setSalario(?string $value) {
        if (Empleado::validateSalario($value))  {
            $this->salario = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleSalario(): ?string {
        return 'Empleado::salario::62'; /*62:salario*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromRiesgo(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toRiesgo(): ?string {
        if (Empleado::validateRiesgo($this->riesgo))  {
            if (!is_null($this->riesgo)) {
                return $this->riesgo; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::riesgo');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateRiesgo(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::riesgo");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getRiesgo(): ?string {
        return $this->riesgo;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setRiesgo(?string $value) {
        if (Empleado::validateRiesgo($value))  {
            $this->riesgo = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleRiesgo(): ?string {
        return 'Empleado::riesgo::63'; /*63:riesgo*/
    }

    /**
     * @param ?string $value
     * @throws Exception
     * @return ?string
     */
    public static function fromInicio(?string $value): ?string {
        if (!is_null($value)) {
            return $value; /*string*/
        } else {
            return null;
        }
    }

    /**
     * @throws Exception
     * @return ?string
     */
    public function toInicio(): ?string {
        if (Empleado::validateInicio($this->inicio))  {
            if (!is_null($this->inicio)) {
                return $this->inicio; /*string*/
            } else {
                return  null;
            }
        }
        throw new Exception('never get to this Empleado::inicio');
    }

    /**
     * @param string|null
     * @return bool
     * @throws Exception
     */
    public static function validateInicio(?string $value): bool {
        if (!is_null($value)) {
            if (!is_string($value)) {
                throw new Exception("Attribute Error:Empleado::inicio");
            }
        }
        return true;
    }

    /**
     * @return ?string
     */
    public function getInicio(): ?string {
        return $this->inicio;
    }

    /**
     * @param string|null
     * @throws Exception
     */
    public function setInicio(?string $value) {
        if (Empleado::validateInicio($value))  {
            $this->inicio = $value;
        }
    }

    /**
     * @return ?string
     */
    public static function sampleInicio(): ?string {
        return 'Empleado::inicio::64'; /*64:inicio*/
    }

    /**
     * @throws Exception
     * @return bool
     */
    public function validate(): bool {
        return Empleado::validateGrupo($this->grupo)
        || Empleado::validateNoEmpleado($this->noEmpleado)
        || Empleado::validateNombre($this->nombre)
        || Empleado::validatePaterno($this->paterno)
        || Empleado::validateMaterno($this->materno)
        || Empleado::validateMetodoPago($this->metodoPago)
        || Empleado::validatePeriodo($this->periodo)
        || Empleado::validateRegimen($this->regimen)
        || Empleado::validatePuesto($this->puesto)
        || Empleado::validateDepartamento($this->departamento)
        || Empleado::validateCurp($this->curp)
        || Empleado::validateImss($this->imss)
        || Empleado::validateRFC($this->rfc)
        || Empleado::validateCalle($this->calle)
        || Empleado::validateColonia($this->colonia)
        || Empleado::validateNoEXT($this->noEXT)
        || Empleado::validateCp($this->cp)
        || Empleado::validateMunicipio($this->municipio)
        || Empleado::validateEstado($this->estado)
        || Empleado::validateTipoContrato($this->tipoContrato)
        || Empleado::validateAsimilados($this->asimilados)
        || Empleado::validateSindicalizado($this->sindicalizado)
        || Empleado::validateEntidadEmite($this->entidadEmite)
        || Empleado::validateBanco($this->banco)
        || Empleado::validateClabe($this->clabe)
        || Empleado::validateNoInt($this->noInt)
        || Empleado::validateLocalidad($this->localidad)
        || Empleado::validateEmail($this->email)
        || Empleado::validateTipoJornada($this->tipoJornada)
        || Empleado::validatePatronal($this->patronal)
        || Empleado::validateCuotaDiaria($this->cuotaDiaria)
        || Empleado::validateSalario($this->salario)
        || Empleado::validateRiesgo($this->riesgo)
        || Empleado::validateInicio($this->inicio);
    }

    /**
     * @return stdClass
     * @throws Exception
     */
    public function to(): stdClass  {
        $out = new stdClass();
        $out->{'grupo'} = $this->toGrupo();
        $out->{'no_empleado'} = $this->toNoEmpleado();
        $out->{'nombre'} = $this->toNombre();
        $out->{'paterno'} = $this->toPaterno();
        $out->{'materno'} = $this->toMaterno();
        $out->{'metodo_pago'} = $this->toMetodoPago();
        $out->{'periodo'} = $this->toPeriodo();
        $out->{'regimen'} = $this->toRegimen();
        $out->{'puesto'} = $this->toPuesto();
        $out->{'departamento'} = $this->toDepartamento();
        $out->{'curp'} = $this->toCurp();
        $out->{'imss'} = $this->toImss();
        $out->{'rfc'} = $this->toRFC();
        $out->{'calle'} = $this->toCalle();
        $out->{'colonia'} = $this->toColonia();
        $out->{'no_ext'} = $this->toNoEXT();
        $out->{'cp'} = $this->toCp();
        $out->{'municipio'} = $this->toMunicipio();
        $out->{'estado'} = $this->toEstado();
        $out->{'tipo_contrato'} = $this->toTipoContrato();
        $out->{'asimilados'} = $this->toAsimilados();
        $out->{'sindicalizado'} = $this->toSindicalizado();
        $out->{'entidad_emite'} = $this->toEntidadEmite();
        $out->{'banco'} = $this->toBanco();
        $out->{'clabe'} = $this->toClabe();
        $out->{'no_int'} = $this->toNoInt();
        $out->{'localidad'} = $this->toLocalidad();
        $out->{'email'} = $this->toEmail();
        $out->{'tipo_jornada'} = $this->toTipoJornada();
        $out->{'patronal'} = $this->toPatronal();
        $out->{'cuota_diaria'} = $this->toCuotaDiaria();
        $out->{'salario'} = $this->toSalario();
        $out->{'riesgo'} = $this->toRiesgo();
        $out->{'inicio'} = $this->toInicio();
        return $out;
    }

    /**
     * @param stdClass $obj
     * @return Empleado
     * @throws Exception
     */
    public function from(stdClass $obj): Empleado {
        Empleado::validateGrupo($this->grupo, true);
        Empleado::validateNoEmpleado($this->noEmpleado, true);
        Empleado::validateNombre($this->nombre, true);
        Empleado::validatePaterno($this->paterno, true);
        Empleado::validateMaterno($this->materno, true);
        Empleado::validateMetodoPago($this->metodoPago, true);
        Empleado::validatePeriodo($this->periodo, true);
        Empleado::validateRegimen($this->regimen, true);
        Empleado::validatePuesto($this->puesto, true);
        Empleado::validateDepartamento($this->departamento, true);
        Empleado::validateCurp($this->curp, true);
        Empleado::validateImss($this->imss, true);
        Empleado::validateRFC($this->rfc, true);
        Empleado::validateCalle($this->calle, true);
        Empleado::validateColonia($this->colonia, true);
        Empleado::validateNoEXT($this->noEXT, true);
        Empleado::validateCp($this->cp, true);
        Empleado::validateMunicipio($this->municipio, true);
        Empleado::validateEstado($this->estado, true);
        Empleado::validateTipoContrato($this->tipoContrato, true);
        Empleado::validateAsimilados($this->asimilados, true);
        Empleado::validateSindicalizado($this->sindicalizado, true);
        Empleado::validateEntidadEmite($this->entidadEmite, true);
        Empleado::validateBanco($this->banco, true);
        Empleado::validateClabe($this->clabe, true);
        Empleado::validateNoInt($this->noInt, true);
        Empleado::validateLocalidad($this->localidad, true);
        Empleado::validateEmail($this->email, true);
        Empleado::validateTipoJornada($this->tipoJornada, true);
        Empleado::validatePatronal($this->patronal, true);
        Empleado::validateCuotaDiaria($this->cuotaDiaria, true);
        Empleado::validateSalario($this->salario, true);
        Empleado::validateRiesgo($this->riesgo, true);
        Empleado::validateInicio($this->inicio, true);
        return new Empleado(
         Empleado::fromGrupo($obj->{'grupo'})
        ,Empleado::fromNoEmpleado($obj->{'no_empleado'})
        ,Empleado::fromNombre($obj->{'nombre'})
        ,Empleado::fromPaterno($obj->{'paterno'})
        ,Empleado::fromMaterno($obj->{'materno'})
        ,Empleado::fromMetodoPago($obj->{'metodo_pago'})
        ,Empleado::fromPeriodo($obj->{'periodo'})
        ,Empleado::fromRegimen($obj->{'regimen'})
        ,Empleado::fromPuesto($obj->{'puesto'})
        ,Empleado::fromDepartamento($obj->{'departamento'})
        ,Empleado::fromCurp($obj->{'curp'})
        ,Empleado::fromImss($obj->{'imss'})
        ,Empleado::fromRFC($obj->{'rfc'})
        ,Empleado::fromCalle($obj->{'calle'})
        ,Empleado::fromColonia($obj->{'colonia'})
        ,Empleado::fromNoEXT($obj->{'no_ext'})
        ,Empleado::fromCp($obj->{'cp'})
        ,Empleado::fromMunicipio($obj->{'municipio'})
        ,Empleado::fromEstado($obj->{'estado'})
        ,Empleado::fromTipoContrato($obj->{'tipo_contrato'})
        ,Empleado::fromAsimilados($obj->{'asimilados'})
        ,Empleado::fromSindicalizado($obj->{'sindicalizado'})
        ,Empleado::fromEntidadEmite($obj->{'entidad_emite'})
        ,Empleado::fromBanco($obj->{'banco'})
        ,Empleado::fromClabe($obj->{'clabe'})
        ,Empleado::fromNoInt($obj->{'no_int'})
        ,Empleado::fromLocalidad($obj->{'localidad'})
        ,Empleado::fromEmail($obj->{'email'})
        ,Empleado::fromTipoJornada($obj->{'tipo_jornada'})
        ,Empleado::fromPatronal($obj->{'patronal'})
        ,Empleado::fromCuotaDiaria($obj->{'cuota_diaria'})
        ,Empleado::fromSalario($obj->{'salario'})
        ,Empleado::fromRiesgo($obj->{'riesgo'})
        ,Empleado::fromInicio($obj->{'inicio'})
        );
    }

    /**
     * @return Empleado
     */
    public static function sample(): Empleado {
        return new Empleado(
         Empleado::sampleGrupo()
        ,Empleado::sampleNoEmpleado()
        ,Empleado::sampleNombre()
        ,Empleado::samplePaterno()
        ,Empleado::sampleMaterno()
        ,Empleado::sampleMetodoPago()
        ,Empleado::samplePeriodo()
        ,Empleado::sampleRegimen()
        ,Empleado::samplePuesto()
        ,Empleado::sampleDepartamento()
        ,Empleado::sampleCurp()
        ,Empleado::sampleImss()
        ,Empleado::sampleRFC()
        ,Empleado::sampleCalle()
        ,Empleado::sampleColonia()
        ,Empleado::sampleNoEXT()
        ,Empleado::sampleCp()
        ,Empleado::sampleMunicipio()
        ,Empleado::sampleEstado()
        ,Empleado::sampleTipoContrato()
        ,Empleado::sampleAsimilados()
        ,Empleado::sampleSindicalizado()
        ,Empleado::sampleEntidadEmite()
        ,Empleado::sampleBanco()
        ,Empleado::sampleClabe()
        ,Empleado::sampleNoInt()
        ,Empleado::sampleLocalidad()
        ,Empleado::sampleEmail()
        ,Empleado::sampleTipoJornada()
        ,Empleado::samplePatronal()
        ,Empleado::sampleCuotaDiaria()
        ,Empleado::sampleSalario()
        ,Empleado::sampleRiesgo()
        ,Empleado::sampleInicio()
        );
    }
}
?>
